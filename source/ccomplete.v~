
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module Complete(

		//////////// CLOCK //////////
		input 	     ADC_CLK_10,
		input 	     MAX10_CLK1_50,
		input 	     MAX10_CLK2_50,

		//////////// SEG7 //////////
		output [7:0] HEX0,
		output [7:0] HEX1,
		output [7:0] HEX2,
		output [7:0] HEX3,
		output [7:0] HEX4,
		output [7:0] HEX5,

		//////////// KEY //////////
		input [1:0]  KEY,

		//////////// LED //////////
		output [9:0] LEDR,

		//////////// SW //////////
		input [9:0]  SW
		);



   //=======================================================
   //  REG/WIRE declarations
   //=======================================================


   
   //Block 1
   reg [7:0] 		     B1_HX0 = 8'b0;
   reg [7:0] 		     B1_HX1 = 8'b0;
   reg [7:0] 		     B1_HX2 = 8'b0;
   reg [7:0] 		     B1_HX3 = 8'b0;
   reg [7:0] 		     B1_HX4 = 8'b0;
   reg [7:0] 		     B1_HX5 = 8'b0;
   reg [7:0] 		     B1_HX6 = 8'b0;
   reg [7:0] 		     B1_HX7 = 8'b0;

   reg [9:0] 		     B1_LEDR;

   //Block 2

   //Block 3
   reg [7:0] 		     B3_HX0 = 8'b0;
   reg [7:0] 		     B3_HX1 = 8'b0;
   reg [7:0] 		     B3_HX2 = 8'b0;
   reg [7:0] 		     B3_HX3 = 8'b0;
   reg [7:0] 		     B3_HX4 = 8'b0;
   reg [7:0] 	             B3_HX5 = 8'b0;
   reg [7:0] 		     B3_HX6 = 8'b0;
   reg [7:0] 		     B3_HX7 = 8'b0;

   reg [9:0] 		     B3_LEDR = 10'b0;
   
   

   

   

   //=======================================================
   //  Structural coding
   //=======================================================


   always@(SW[8], SW[9])
     begin
     case(SW[9])
       1'b0: begin
	  B1_HX0 = HEX0;
	  B1_HX1 = HEX1;
	  B1_HX2 = HEX2;
	  B1_HX3 = HEX3;
	  B1_HX4 = HEX4;
	  B1_HX5 = HEX5;
	  B1_LEDR = LEDR;
	  
       end
       1'b1:begin
	  B1_HX0 = HEX0;
	  B3_HX1 = HEX1;
	  B3_HX2 = HEX2;
	  B3_HX3 = HEX3;
	  B3_HX4 = HEX4;
	  B3_HX5 = HEX5;
	  B3_LEDR = LEDR;
	  
       end
     endcase // case (SW[9])
	
     end // always@ (SW[8], SW[9])
   
       
	 

   //Block 1
   switch_led B00 (
		  .SW (SW),
		  .KEY (KEY),
		  .led (B3_LEDR)
		  );

   birthdays B01 (
		 .KEY (KEY),
		 .HEX0 (B1_HX0),
		 .HEX1 (B1_HX1),
		 .HEX2 (B1_HX2),
		 .HEX3 (B1_HX3),
		 .HEX4 (B1_HX4),
		 .HEX5 (B1_HX5)
		 );
   

   //Block 2

   
       //Block 3
       compare B30(
		  .SW (SW),
		  .HEX0 (B3_HX0),
		  .HEX1 (B3_HX1),
		  .HEX2 (B3_HX2),
		  .HEX3 (B3_HX3),
		  .HEX4 (B3_HX4),
		  .HEX5 (B3_HX5),
		  .LEDR (B3_LEDR)
	  
		  );
       
       
   
endmodule
